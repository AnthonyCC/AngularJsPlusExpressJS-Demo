"use strict";function logErrors(e,r,s,p){errorLogger(e.stack),p(e)}function clientErrorHandler(e,r,s,p){r.xhr?s.status(500).send({error:"Something failed!",status:500}):p(e)}function errorHandler(e,r,s,p){s.status(500),s.render("error",{error:e,status:500})}var express=require("express"),bodyParser=require("body-parser"),morgan=require("morgan"),indexRoutes=require("./routes/index"),http=require("http"),path=require("path"),debug=require("debug"),app=module.exports=express(),errorLogger=debug("error");app.set("port",process.env.PORT||3e3),app.set("views",__dirname+"/views"),app.set("view engine","jade"),app.use(morgan("dev")),app.use(bodyParser()),app.use(express["static"](path.join(__dirname,"public")));var env=process.env.NODE_ENV||"development";app.use("/",indexRoutes),app.use("*",indexRoutes),app.use(logErrors),app.use(clientErrorHandler),app.use(errorHandler),http.createServer(app).listen(app.get("port"),function(){console.log("Express server listening on port "+app.get("port"))});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyIsInNlcnZlci50cyJdLCJuYW1lcyI6WyJsb2dFcnJvcnMiLCJlcnIiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZXJyb3JMb2dnZXIiLCJzdGFjayIsImNsaWVudEVycm9ySGFuZGxlciIsInhociIsInN0YXR1cyIsInNlbmQiLCJlcnJvciIsImVycm9ySGFuZGxlciIsInJlbmRlciIsImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9keVBhcnNlciIsIm1vcmdhbiIsImluZGV4Um91dGVzIiwiaHR0cCIsInBhdGgiLCJkZWJ1ZyIsImFwcCIsIm1vZHVsZSIsImV4cG9ydHMiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsIl9fZGlybmFtZSIsInVzZSIsImpvaW4iLCJOT0RFX0VOViIsImNyZWF0ZVNlcnZlciIsImxpc3RlbiIsImdldCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUdBLFlDc0RBLFNBQUFBLFdBQW1CQyxFQUFLQyxFQUFLQyxFQUFLQyxHQUNoQ0MsWUFBWUosRUFBSUssT0FDaEJGLEVBQUtILEdBR1AsUUFBQU0sb0JBQTRCTixFQUFLQyxFQUFLQyxFQUFLQyxHQUVyQ0YsRUFBSU0sSUFDTkwsRUFBSU0sT0FBTyxLQUFLQyxNQUFPQyxNQUFPLG9CQUFxQkYsT0FBUSxNQUUzREwsRUFBS0gsR0FJVCxRQUFBVyxjQUFzQlgsRUFBS0MsRUFBS0MsRUFBS0MsR0FFbkNELEVBQUlNLE9BQU8sS0FDWE4sRUFBSVUsT0FBTyxTQUFXRixNQUFPVixFQUFLUSxPQUFRLE1BckU1QyxHQUFPSyxTQUFPQyxRQUFXLFdBQ2xCQyxXQUFVRCxRQUFXLGVBQ3JCRSxPQUFNRixRQUFXLFVBQ2pCRyxZQUFXSCxRQUFXLGtCQUN0QkksS0FBSUosUUFBVyxRQUNmSyxLQUFJTCxRQUFXLFFBQ2ZNLE1BQUtOLFFBQVcsU0FDbkJPLElBQU1DLE9BQU9DLFFBQVVWLFVBQ3ZCVCxZQUFjZ0IsTUFBTSxRQVF4QkMsS0FBSUcsSUFBSSxPQUFRQyxRQUFRQyxJQUFJQyxNQUFRLEtBQ3BDTixJQUFJRyxJQUFJLFFBQVNJLFVBQVksVUFDN0JQLElBQUlHLElBQUksY0FBZSxRQUN2QkgsSUFBSVEsSUFBSWIsT0FBTyxRQUNmSyxJQUFJUSxJQUFJZCxjQUNSTSxJQUFJUSxJQUFJaEIsUUFBQUEsVUFBZU0sS0FBS1csS0FBS0YsVUFBVyxXQUU1QyxJQUFJRixLQUFNRCxRQUFRQyxJQUFJSyxVQUFZLGFBT2xDVixLQUFJUSxJQUFJLElBQUtaLGFBTWJJLElBQUlRLElBQUksSUFBS1osYUFJYkksSUFBSVEsSUFBSTlCLFdBQ1JzQixJQUFJUSxJQUFJdkIsb0JBQ1JlLElBQUlRLElBQUlsQixjQU1STyxLQUFLYyxhQUFhWCxLQUFLWSxPQUFPWixJQUFJYSxJQUFJLFFBQVMsV0FDN0NDLFFBQVFDLElBQUksb0NBQXNDZixJQUFJYSxJQUFJIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llc1xuICovXG5cInVzZSBzdHJpY3RcIjtcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xudmFyIG1vcmdhbiA9IHJlcXVpcmUoJ21vcmdhbicpO1xudmFyIGluZGV4Um91dGVzID0gcmVxdWlyZSgnLi9yb3V0ZXMvaW5kZXgnKTtcbnZhciBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpO1xudmFyIGFwcCA9IG1vZHVsZS5leHBvcnRzID0gZXhwcmVzcygpO1xudmFyIGVycm9yTG9nZ2VyID0gZGVidWcoJ2Vycm9yJyk7XG4vKipcbiAqIENvbmZpZ3VyYXRpb25cbiAqL1xuLy8gYWxsIGVudmlyb25tZW50c1xuYXBwLnNldCgncG9ydCcsIHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCk7XG5hcHAuc2V0KCd2aWV3cycsIF9fZGlybmFtZSArICcvdmlld3MnKTtcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ2phZGUnKTtcbmFwcC51c2UobW9yZ2FuKCdkZXYnKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIoKSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpO1xudmFyIGVudiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCc7XG4vKipcbiAqIFJvdXRlc1xuICovXG4vLyBzZXJ2ZSBpbmRleFxuYXBwLnVzZSgnLycsIGluZGV4Um91dGVzKTtcbi8vIC8vIEpTT04gQVBJXG4vLyBhcHAuZ2V0KCcvYXBpL25hbWUnLCBhcGkubmFtZSk7XG4vLyByZWRpcmVjdCBhbGwgb3RoZXJzIHRvIHRoZSBpbmRleCAoSFRNTDUgaGlzdG9yeSlcbmFwcC51c2UoJyonLCBpbmRleFJvdXRlcyk7XG4vLyBFcnJvciBoYW5kbGluZ1xuYXBwLnVzZShsb2dFcnJvcnMpO1xuYXBwLnVzZShjbGllbnRFcnJvckhhbmRsZXIpO1xuYXBwLnVzZShlcnJvckhhbmRsZXIpO1xuLyoqXG4gKiBTdGFydCBTZXJ2ZXJcbiAqL1xuaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKS5saXN0ZW4oYXBwLmdldCgncG9ydCcpLCBmdW5jdGlvbiAoKSB7XG4gICAgY29uc29sZS5sb2coJ0V4cHJlc3Mgc2VydmVyIGxpc3RlbmluZyBvbiBwb3J0ICcgKyBhcHAuZ2V0KCdwb3J0JykpO1xufSk7XG5mdW5jdGlvbiBsb2dFcnJvcnMoZXJyLCByZXEsIHJlcywgbmV4dCkge1xuICAgIGVycm9yTG9nZ2VyKGVyci5zdGFjayk7XG4gICAgbmV4dChlcnIpO1xufVxuZnVuY3Rpb24gY2xpZW50RXJyb3JIYW5kbGVyKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgICBkZWJ1Z2dlcjtcbiAgICBpZiAocmVxLnhocikge1xuICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCh7IGVycm9yOiAnU29tZXRoaW5nIGZhaWxlZCEnLCBzdGF0dXM6IDUwMCB9KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG5leHQoZXJyKTtcbiAgICB9XG59XG5mdW5jdGlvbiBlcnJvckhhbmRsZXIoZXJyLCByZXEsIHJlcywgbmV4dCkge1xuICAgIGRlYnVnZ2VyO1xuICAgIHJlcy5zdGF0dXMoNTAwKTtcbiAgICByZXMucmVuZGVyKCdlcnJvcicsIHsgZXJyb3I6IGVyciwgc3RhdHVzOiA1MDAgfSk7XG59XG4iLCJcclxuLyoqXHJcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXNcclxuICovXHJcblxyXG5pbXBvcnQgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuaW1wb3J0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xyXG5pbXBvcnQgbW9yZ2FuID0gcmVxdWlyZSgnbW9yZ2FuJyk7XHJcbmltcG9ydCBpbmRleFJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL2luZGV4Jyk7XHJcbmltcG9ydCBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xyXG5pbXBvcnQgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcclxuaW1wb3J0IGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKTtcclxudmFyIGFwcCA9IG1vZHVsZS5leHBvcnRzID0gZXhwcmVzcygpO1xyXG52YXIgZXJyb3JMb2dnZXIgPSBkZWJ1ZygnZXJyb3InKTtcclxuXHJcblxyXG4vKipcclxuICogQ29uZmlndXJhdGlvblxyXG4gKi9cclxuXHJcbi8vIGFsbCBlbnZpcm9ubWVudHNcclxuYXBwLnNldCgncG9ydCcsIHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCk7XHJcbmFwcC5zZXQoJ3ZpZXdzJywgX19kaXJuYW1lICsgJy92aWV3cycpO1xyXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdqYWRlJyk7XHJcbmFwcC51c2UobW9yZ2FuKCdkZXYnKSk7XHJcbmFwcC51c2UoYm9keVBhcnNlcigpKTtcclxuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAncHVibGljJykpKTtcclxuXHJcbnZhciBlbnYgPSBwcm9jZXNzLmVudi5OT0RFX0VOViB8fCAnZGV2ZWxvcG1lbnQnO1xyXG5cclxuLyoqXHJcbiAqIFJvdXRlc1xyXG4gKi9cclxuXHJcbi8vIHNlcnZlIGluZGV4XHJcbmFwcC51c2UoJy8nLCBpbmRleFJvdXRlcyk7XHJcblxyXG4vLyAvLyBKU09OIEFQSVxyXG4vLyBhcHAuZ2V0KCcvYXBpL25hbWUnLCBhcGkubmFtZSk7XHJcblxyXG4vLyByZWRpcmVjdCBhbGwgb3RoZXJzIHRvIHRoZSBpbmRleCAoSFRNTDUgaGlzdG9yeSlcclxuYXBwLnVzZSgnKicsIGluZGV4Um91dGVzKTtcclxuXHJcblxyXG4vLyBFcnJvciBoYW5kbGluZ1xyXG5hcHAudXNlKGxvZ0Vycm9ycyk7XHJcbmFwcC51c2UoY2xpZW50RXJyb3JIYW5kbGVyKTtcclxuYXBwLnVzZShlcnJvckhhbmRsZXIpO1xyXG5cclxuLyoqXHJcbiAqIFN0YXJ0IFNlcnZlclxyXG4gKi9cclxuXHJcbmh0dHAuY3JlYXRlU2VydmVyKGFwcCkubGlzdGVuKGFwcC5nZXQoJ3BvcnQnKSwgZnVuY3Rpb24gKCkge1xyXG4gIGNvbnNvbGUubG9nKCdFeHByZXNzIHNlcnZlciBsaXN0ZW5pbmcgb24gcG9ydCAnICsgYXBwLmdldCgncG9ydCcpKTtcclxufSk7XHJcblxyXG5mdW5jdGlvbiBsb2dFcnJvcnMoZXJyLCByZXEsIHJlcywgbmV4dCkge1xyXG4gIGVycm9yTG9nZ2VyKGVyci5zdGFjayk7XHJcbiAgbmV4dChlcnIpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbGllbnRFcnJvckhhbmRsZXIoZXJyLCByZXEsIHJlcywgbmV4dCkge1xyXG5cdGRlYnVnZ2VyO1xyXG4gIGlmIChyZXEueGhyKSB7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCh7IGVycm9yOiAnU29tZXRoaW5nIGZhaWxlZCEnLCBzdGF0dXM6IDUwMCB9KTtcclxuICB9IGVsc2Uge1xyXG4gICAgbmV4dChlcnIpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZXJyb3JIYW5kbGVyKGVyciwgcmVxLCByZXMsIG5leHQpIHtcclxuXHRkZWJ1Z2dlcjtcclxuICByZXMuc3RhdHVzKDUwMCk7XHJcbiAgcmVzLnJlbmRlcignZXJyb3InLCB7IGVycm9yOiBlcnIsIHN0YXR1czogNTAwIH0pO1xyXG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
